# Map for handling WebSocket connections
map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

# Redirect www to non-www
server {
    listen 80;
    listen [::]:80;
    server_name www.kahatain-dz.com;

    return 301 https://kahatain-dz.com$request_uri;
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name www.kahatain-dz.com;

    ssl_certificate /etc/letsencrypt/live/kahatain-dz.com-0001/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/kahatain-dz.com-0001/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    return 301 https://kahatain-dz.com$request_uri;
}

# Main server block for non-www
server {
    server_name kahatain-dz.com *.kahatain-dz.com;
    server_tokens off;
    root /var/www/project/public;

    index index.php;

    charset utf-8;

    # Handle PHP files
    location /index.php {
        try_files /not_exists @octane;
    }

    # Handle other requests
    location / {
        try_files $uri $uri/ @octane;
    }

    # Static files
    location = /favicon.ico { access_log off; log_not_found off; }
    location = /robots.txt  { access_log off; log_not_found off; }

    access_log off;
    error_log  /var/log/nginx/kahatain-dz.com-error.log error;

    error_page 404 /index.php;

    # Proxy to backend application
    location @octane {
        set $suffix "";

        if ($uri = /index.php) {
            set $suffix ?$query_string;
        }

        proxy_http_version 1.1;
        proxy_set_header Host $http_host;
        proxy_set_header Scheme $scheme;
        proxy_set_header SERVER_PORT $server_port;
        proxy_set_header REMOTE_ADDR $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;  # Use the variable here

        proxy_pass http://127.0.0.1:8000$suffix;
    }

    # WebSocket handling
    location /app {
        proxy_http_version 1.1;
        proxy_set_header Host $http_host;
        proxy_set_header Scheme $scheme;
        proxy_set_header SERVER_PORT $server_port;
        proxy_set_header REMOTE_ADDR $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;  # Correct usage

        proxy_pass http://127.0.0.1:9000;
    }

    # Meilisearch location
    location /meilisearch/ {
        proxy_pass http://localhost:7700/;  # Note the trailing slash
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;

        proxy_cache_bypass $http_upgrade;
    }

    # SSL configuration
    listen [::]:443 ssl ipv6only=on;
    listen 443 ssl;
    ssl_certificate /etc/letsencrypt/live/kahatain-dz.com-0001/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/kahatain-dz.com-0001/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # Enable Gzip compression
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_min_length 256;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;  # Adjust the compression level (1-9)
}

# Redirect HTTP requests to HTTPS for non-www
server {
    listen 80;
    listen [::]:80;
    server_name kahatain-dz.com;

    return 301 https://$host$request_uri;  # Redirect to HTTPS
}

# Final server block for non-www
server {
    if ($host = kahatain-dz.com) {
        return 301 https://$host$request_uri;  # Redirect to HTTPS
    }
    server_name kahatain-dz.com;
    return 404;

    listen [::]:443 ssl;
    listen 443 ssl;
    ssl_certificate /etc/letsencrypt/live/kahatain-dz.com-0001/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/kahatain-dz.com-0001/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
}
